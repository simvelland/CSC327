#include <iostream>
#include <sstream>
#include <cctype>
#include <iomanip>
using namespace std;

class RunLengthEncode {
public:
    static std::string encode(const std::string& input) {
        if (input.empty()) {
            return "";  // Return an empty string for an empty input
        }

        std::string result;
        char currentChar = input[0];
        int count = 1;

        for (size_t i = 1; i <= input.size(); ++i) {
            if (i < input.size() && input[i] == currentChar) {
                count++;
            } else {
                if (count > 4) {
                    result += "/" + formatCount(count) + currentChar;
                } else {
                    result += std::string(count, currentChar);
                }
                if (i < input.size()) {
                    currentChar = input[i];
                    count = 1;
                }
            }
        }

        return result;
    }

private:
    static std::string formatCount(int count) {
        std::ostringstream oss;
        oss << std::setw(2) << std::setfill('0') << count;
        return oss.str();
    }
};

int main() {
    std::string input;
    std::cout << "Enter a string for encoding: ";
    std::getline(std::cin, input);

    std::string encoded = RunLengthEncode::encode(input);

    std::cout << "Original: " << input << std::endl;
    std::cout << "Encoded : " << encoded << std::endl;

    return 0;
}
